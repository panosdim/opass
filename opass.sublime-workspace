{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"valu",
				"value_if_allowed\tparam"
			],
			[
				"color",
				"color_red"
			],
			[
				"to",
				"tolls\tstatement"
			],
			[
				"TEX",
				"TXT_RESULT\tstatement"
			],
			[
				"vehi",
				"vehicle_types\tstatement"
			],
			[
				"MB_",
				"MB_VEHICLE\tstatement"
			],
			[
				"v",
				"vehicle_types\tstatement"
			],
			[
				"file",
				"data_file"
			],
			[
				"b",
				"batName"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "mdv (Linux)",
	"build_system_choices":
	[
		[
			[
				[
					"mdv (Linux)",
					""
				],
				[
					"mdv (Linux)",
					"clean"
				],
				[
					"mdv (Linux)",
					"rebuild_cache"
				],
				[
					"mdv (Linux)",
					"mdv"
				],
				[
					"mdv (Linux)",
					"src/display.o"
				],
				[
					"mdv (Linux)",
					"src/display.i"
				],
				[
					"mdv (Linux)",
					"src/display.s"
				],
				[
					"mdv (Linux)",
					"src/fallback.o"
				],
				[
					"mdv (Linux)",
					"src/fallback.i"
				],
				[
					"mdv (Linux)",
					"src/fallback.s"
				],
				[
					"mdv (Linux)",
					"src/file.o"
				],
				[
					"mdv (Linux)",
					"src/file.i"
				],
				[
					"mdv (Linux)",
					"src/file.s"
				],
				[
					"mdv (Linux)",
					"src/headers.o"
				],
				[
					"mdv (Linux)",
					"src/headers.i"
				],
				[
					"mdv (Linux)",
					"src/headers.s"
				],
				[
					"mdv (Linux)",
					"src/hr.o"
				],
				[
					"mdv (Linux)",
					"src/hr.i"
				],
				[
					"mdv (Linux)",
					"src/hr.s"
				],
				[
					"mdv (Linux)",
					"src/lists.o"
				],
				[
					"mdv (Linux)",
					"src/lists.i"
				],
				[
					"mdv (Linux)",
					"src/lists.s"
				],
				[
					"mdv (Linux)",
					"src/main.o"
				],
				[
					"mdv (Linux)",
					"src/main.i"
				],
				[
					"mdv (Linux)",
					"src/main.s"
				],
				[
					"mdv (Linux)",
					"src/parser.o"
				],
				[
					"mdv (Linux)",
					"src/parser.i"
				],
				[
					"mdv (Linux)",
					"src/parser.s"
				],
				[
					"mdv (Linux)",
					"src/span.o"
				],
				[
					"mdv (Linux)",
					"src/span.i"
				],
				[
					"mdv (Linux)",
					"src/span.s"
				]
			],
			[
				"mdv (Linux)",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 367.0,
		"last_filter": "git st",
		"selected_items":
		[
			[
				"git st",
				"Git: Status"
			],
			[
				"git",
				"Git: Add All"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"packa",
				"Package Control: List Packages"
			],
			[
				"cla",
				"Clang Format: Select Style"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"clang",
				"Clang Format: Format Selection"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Preferences: Package Control Settings â€“ Default"
			]
		],
		"width": 476.0
	},
	"console":
	{
		"height": 315.0,
		"history":
		[
			"clear",
			"ping http://tpc-proxy.ac.de.eu.ericsson.se:8880",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler({\"http\":\"http://137.58.122.95:8880/\"})) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler({\"http\":\"http://tpc-proxy.ac.de.eu.ericsson.se:8880/\"})) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/xigpadi/Tools/opass"
	],
	"file_history":
	[
		"/home/xigpadi/Tools/opass/opass.py",
		"/home/xigpadi/Tools/opass/LICENSE",
		"/home/xigpadi/Tools/opass/test.py",
		"/home/xigpadi/.config/sublime-text-3/Packages/Anaconda/Default (Linux).sublime-keymap",
		"/home/xigpadi/Tools/LLMP/llmp.py",
		"/home/xigpadi/Tools/STP/src/STP.json",
		"/home/xigpadi/Tools/STP/src/STP.py",
		"/home/xigpadi/Downloads/flatbedcursors-master-2c5af19a36abf361b608c656f7f5abb2ce4f8819/INSTALL",
		"/home/xigpadi/Tools/opass.py",
		"/home/xigpadi/Tools/mdv/build/CMakeFiles/TargetDirectories.txt",
		"/home/xigpadi/ftp/priv/bstrlib-master/bstraux.c",
		"/home/xigpadi/Tools/mdv/src/MdvConfig.h.in",
		"/home/xigpadi/Tools/mdv/src/fallback.c",
		"/home/xigpadi/ftp/priv/bstring/README.md",
		"/home/xigpadi/Tools/mdv/src/display.h",
		"/home/xigpadi/Tools/mdv/src/display.c",
		"/home/xigpadi/ftp/priv/bstrlib-master/bsafe.c",
		"/home/xigpadi/Tools/mdv/CMakeLists.txt",
		"/home/xigpadi/Tools/mdv/mdv.sublime-project",
		"/home/xigpadi/CLionProjects/mdv/mdv.sublime-project",
		"/home/xigpadi/CLionProjects/mdv/CMakeLists.txt",
		"/home/xigpadi/Tools/BatteryStamina/mainwindow.cpp",
		"/home/xigpadi/opt/www/movies/LICENSE.md",
		"/home/xigpadi/opt/www/movies/bower_components/javascript-auto-complete/bower.json",
		"/home/xigpadi/opt/perl5/.modulebuildrc",
		"/home/xigpadi/.config/sublime-text-3/Packages/ShellScriptImproved/miscellaneous/demo.sh",
		"/home/xigpadi/.local/share/applications/gvim.desktop",
		"/home/xigpadi/Tools/cshmarks/goto",
		"/home/xigpadi/Tools/cshmarks/list",
		"/home/xigpadi/opt/sublime_text/changelog.txt",
		"/home/xigpadi/.bashrc.alias",
		"/home/xigpadi/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
		"/home/xigpadi/.config/sublime-text-3/Packages/Package Control/Package Control.sublime-settings"
	],
	"find":
	{
		"height": 25.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"tk.",
			"todo",
			"fcntlines",
			"strdup",
			"strtok",
			"strncat",
			"strncpy",
			"gets",
			"strcat",
			"strcpy",
			"strdup"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 37.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.astyle_error_message":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 114.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 169.0
	},
	"pinned_build_system": "mdv (Linux)",
	"project": "opass.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 70.0,
		"last_filter": "fcnt",
		"selected_items":
		[
			[
				"fcnt",
				"fcntlines"
			]
		],
		"width": 428.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 209.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
